<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimension.dao.CaseMapper">
    <resultMap id="BaseResultMap" type="com.dimension.pojo.Case">
        <id column="Id" jdbcType="INTEGER" property="id"/>
        <result column="caseCode" jdbcType="VARCHAR" property="casecode"/>
        <result column="caseName" jdbcType="VARCHAR" property="casename"/>
        <result column="caseType" jdbcType="VARCHAR" property="casetype"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="groupId" jdbcType="INTEGER" property="groupid"/>
        <result column="beginTime" jdbcType="TIMESTAMP" property="begintime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endtime"/>
        <result column="departmentId" jdbcType="BIGINT" property="departmentId"/>
        <result column="abstract" jdbcType="VARCHAR" property="abstracts"/>
    </resultMap>

    <sql id="Base_Column_List">
		Id, caseCode, caseName, caseType, description, groupId,
		beginTime,
		endTime,departmentId,abstract
	</sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultType="Case">
        select
        `case`.Id, caseCode, caseName, caseType, `case`.description, groupId,
		beginTime,
		endTime,departmentId,grouperid,abstract
        from `case` LEFT JOIN `group` on `group`.id=`case`.groupid
        where `case`.Id = #{id,jdbcType=INTEGER}
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		 update `case`
		 SET   `case`.isvalid=0
		where Id = #{id,jdbcType=INTEGER};
		 update case_node INNER JOIN base_node on case_node.nodeId=base_node.nodeId
		 SET   case_node.isvalid=0,
                base_node.isValid=0
		where case_node.caseId = #{id,jdbcType=INTEGER};
	</update>
    <insert id="insert" parameterType="com.dimension.pojo.Case">
		insert into `case` (Id,
		caseCode, caseName,
		caseType, description, groupId,
		beginTime, endTime,departmentId,abstract)
		values (#{id,jdbcType=INTEGER}, #{casecode,jdbcType=VARCHAR},
		#{casename,jdbcType=VARCHAR},
		#{casetype,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER},
		#{begintime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP},#(departmentId,jdbcType=BIGINT),#{abstracts,jdbcType=VARCHAR})
	</insert>
    <insert id="insertSelective" parameterType="com.dimension.pojo.Case" keyColumn="id" keyProperty="id"
            useGeneratedKeys="true">
        insert into `case`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                Id,
            </if>
            <if test="casecode != null">
                caseCode,
            </if>
            <if test="casename != null">
                caseName,
            </if>
            <if test="casetype != null">
                caseType,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="groupid != null">
                groupId,
            </if>
            <if test="begintime != null">
                beginTime,
            </if>
            <if test="endtime != null">
                endTime,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="abstracts != null">
                abstract
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="casecode != null">
                #{casecode,jdbcType=VARCHAR},
            </if>
            <if test="casename != null">
                #{casename,jdbcType=VARCHAR},
            </if>
            <if test="casetype != null">
                #{casetype,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="groupid != null">
                #{groupid,jdbcType=INTEGER},
            </if>
            <if test="begintime != null">
                #{begintime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="abstracts != null">
                #{abstracts,jdbcType=VARCHAR}
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dimension.pojo.Case">
        update `case`
        <set>
            <if test="casecode != null">
                caseCode = #{casecode,jdbcType=VARCHAR},
            </if>
            <if test="casename != null">
                caseName = #{casename,jdbcType=VARCHAR},
            </if>
            <if test="casetype != null">
                caseType = #{casetype,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="groupid != null">
                groupId = #{groupid,jdbcType=INTEGER},
            </if>
            <if test="begintime != null">
                beginTime = #{begintime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                endTime = #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=BIGINT}
            </if>
            <if test="abstracts != null">
                abstract=#{abstracts,jdbcType=VARCHAR}
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dimension.pojo.Case">
		update `case`
		set
		caseCode = #{casecode,jdbcType=VARCHAR},
		caseName =
		#{casename,jdbcType=VARCHAR},
		caseType = #{casetype,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		groupId =
		#{groupid,jdbcType=INTEGER},
		beginTime =
		#{begintime,jdbcType=TIMESTAMP},
		endTime =
		#{endtime,jdbcType=TIMESTAMP}
		departmentId =
		#{departmentId,jdbcType=BIGINT},
		  abstract = #{abstracts,jdbcType=VARCHAR},
		where Id = #{id,jdbcType=INTEGER}
	</update>


    <select id="searchMapCases" resultType="com.dimension.pojo.Case">
        select * from (
        <if test="caseCondition.roleId != 3">
            (SELECT `case`.*,0 as isEdited from `case`
            LEFT JOIN `group` on `case`.groupId=`group`.Id
            <trim prefix="where" prefixOverrides="and | or">
                `case`.isvalid='1'
                <if test="caseCondition.roleId == 4 ">
                    <if test="caseCondition.departmentid != null">
                        and departmentid !=#{caseCondition.departmentid}
                    </if>
                </if>
                <if test="caseCondition.beginTime != null ">
                    and begintime <![CDATA[ >= ]]>
                    #{caseCondition.beginTime}
                </if>
                <if test="caseCondition.endTime != null">
                    and endTime <![CDATA[ <= ]]>
                    #{caseCondition.endTime}
                </if>
                <if test="caseCondition.roleId == 2">
                    and grouperid != #{caseCondition.userId}
                </if>
                <if test="caseCondition.casename != null">
                    and casename like concat("%",#{caseCondition.casename},"%")
                </if>
                <if test="caseCondition.casetype != null">
                    and casetype like concat("%",#{caseCondition.casetype},"%")
                </if>
            </trim>
            )
            UNION
        </if>
        ( select `case`.* ,1 as isEdited from `case`
        left join `group` on `group`.id=`case`.groupId

        <trim prefix="where" prefixOverrides="and | or">
            `case`.isvalid='1'
            <if test="caseCondition.roleId == 4 ">
                <if test="caseCondition.departmentid != null">
                    and departmentid=#{caseCondition.departmentid}
                </if>
            </if>
            <if test="caseCondition.beginTime != null ">
                and begintime <![CDATA[ >= ]]>
                #{caseCondition.beginTime}
            </if>
            <if test="caseCondition.endTime != null">
                and endTime <![CDATA[ <= ]]>
                #{caseCondition.endTime}
            </if>
            <if test="caseCondition.roleId == 2">
                and grouperid = #{caseCondition.userId}
            </if>
            <if test="caseCondition.casename != null">
                and casename like concat("%",#{caseCondition.casename},"%")
            </if>
            <if test="caseCondition.casetype != null">
                and casetype like concat("%",#{caseCondition.casetype},"%")
            </if>
        </trim>
        ) ) as c
        <if test="start != null and count != null">
            limit #{start},#{count}
        </if>

    </select>


    <select id="mapCount" resultType="int">
        select count(*) from (
        <if test="caseCondition.roleId != 3">
            (SELECT `case`.*,0 as isEdited from `case`
            LEFT JOIN `group` on `case`.groupId=`group`.Id
            <trim prefix="where" prefixOverrides="and | or">
                `case`.isvalid='1'
                <if test="caseCondition.roleId == 4 ">
                    <if test="caseCondition.departmentid != null">
                        and departmentid !=#{caseCondition.departmentid}
                    </if>
                </if>
                <if test="caseCondition.beginTime != null ">
                    and begintime <![CDATA[ >= ]]>
                    #{caseCondition.beginTime}
                </if>
                <if test="caseCondition.endTime != null">
                    and endTime <![CDATA[ <= ]]>
                    #{caseCondition.endTime}
                </if>
                <if test="caseCondition.roleId == 2">
                    and grouperid != #{caseCondition.userId}
                </if>
                <if test="caseCondition.casename != null">
                    and casename like concat("%",#{caseCondition.casename},"%")
                </if>
                <if test="caseCondition.casetype != null">
                    and casetype like concat("%",#{caseCondition.casetype},"%")
                </if>
            </trim>
            )
            UNION
        </if>


        ( select `case`.* ,1 as isEdited from `case`
        left join `group` on `group`.id=`case`.groupId

        <trim prefix="where" prefixOverrides="and | or">
            `case`.isvalid='1'
            <if test="caseCondition.roleId == 4 ">
                <if test="caseCondition.departmentid != null">
                    and departmentid=#{caseCondition.departmentid}
                </if>
            </if>
            <if test="caseCondition.beginTime != null ">
                and begintime <![CDATA[ >= ]]>
                #{caseCondition.beginTime}
            </if>
            <if test="caseCondition.endTime != null">
                and endTime <![CDATA[ <= ]]>
                #{caseCondition.endTime}
            </if>
            <if test="caseCondition.roleId == 2">
                and grouperid = #{caseCondition.userId}
            </if>
            <if test="caseCondition.casename != null">
                and casename like concat("%",#{caseCondition.casename},"%")
            </if>
            <if test="caseCondition.casetype != null">
                and casetype like concat("%",#{caseCondition.casetype},"%")
            </if>
        </trim>
        ) ) as c


    </select>

    <select id="searchCases" resultType="Case">
        select `case`.* ,1 as isEdited ,`group`.grouperid as grouperid from `case`
        left join `group` on `group`.id=`case`.groupId
        <trim prefix="where" prefixOverrides="and | or">
            `case`.isvalid='1'
            <if test="caseCondition.roleId == 4 ">
                <if test="caseCondition.departmentid != null">
                    and departmentid=#{caseCondition.departmentid}
                </if>
            </if>
            <if test="caseCondition.beginTime != null ">
                and begintime <![CDATA[ >= ]]>
                #{caseCondition.beginTime}
            </if>
            <if test="caseCondition.endTime != null">
                and endTime <![CDATA[ <= ]]>
                #{caseCondition.endTime}
            </if>
            <if test="caseCondition.roleId == 2  ">
                <if test="caseCondition.isGrouper == 1">
                    and `group`.grouperId=#{caseCondition.userId}
                </if>
                <if test="caseCondition.isGrouper == 0">
                    and `case`.groupId IN (
                    SELECT
                    group_user.groupid
                    FROM
                    group_user
                    WHERE
                    group_user.userid =#{caseCondition.userId}
                    )
                </if>
            </if>
            <if test="caseCondition.casename != null">
                and casename like concat("%",#{caseCondition.casename},"%")
            </if>
            <if test="caseCondition.casetype != null">
                and casetype like concat("%",#{caseCondition.casetype},"%")
            </if>
        </trim>
        <if test="start != null and count != null">
            limit #{start},#{count}
        </if>

    </select>
    <select id="count" resultType="int">
        select count(*) from `case`
        left join `group` on `group`.id=`case`.groupId

        <trim prefix="where" prefixOverrides="and | or">
            `case`.isvalid='1'
            <if test="caseCondition.roleId == 4 ">
                <if test="caseCondition.departmentid != null">
                    and departmentid=#{caseCondition.departmentid}
                </if>
            </if>
            <if test="caseCondition.beginTime != null ">
                and begintime <![CDATA[ >= ]]>
                #{caseCondition.beginTime}
            </if>
            <if test="caseCondition.endTime != null">
                and endTime <![CDATA[ <= ]]>
                #{caseCondition.endTime}
            </if>
            <if test="caseCondition.roleId == 2">
                and grouperid = #{caseCondition.userId}
            </if>
            <if test="caseCondition.casename != null">
                and casename like concat("%",#{caseCondition.casename},"%")
            </if>
            <if test="caseCondition.casetype != null">
                and casetype like concat("%",#{caseCondition.casetype},"%")
            </if>
        </trim>

    </select>
    <select id="searchCaseNodeBycaseId" resultType="long">
    select  case_node.nodeid from case_node
    LEFT JOIN base_node on base_node.nodeid=case_node.nodeid
    LEFT join table_type on table_type.id=base_node.tableid
    where   caseid=#{caseid} and case_node.isvalid='1' and table_type.isvalid='1'
</select>
</mapper>