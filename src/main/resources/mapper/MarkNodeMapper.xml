<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimension.dao.MarkNodeMapper">
	<resultMap id="BaseResultMap" type="com.dimension.pojo.MarkNode">
		<id column="markId" jdbcType="BIGINT" property="markid" />
		<result column="userId" jdbcType="INTEGER" property="userid" />
		<result column="nodeId" jdbcType="BIGINT" property="nodeid" />
		<result column="isEdited" jdbcType="INTEGER" property="isedited" />
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from mark_node
		where markId = #{markid,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.dimension.pojo.MarkNode" keyColumn="markid" keyProperty="markid" useGeneratedKeys="true">
		insert into mark_node
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="markid != null">
				markId,
			</if>
			<if test="userid != null">
				userId,
			</if>
			<if test="nodeid != null">
				nodeId,
			</if>
			<if test="isedited != null">
				isEdited,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="markid != null">
				#{markid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="nodeid != null">
				#{nodeid,jdbcType=BIGINT},
			</if>
			<if test="isedited != null">
				#{isedited,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
    <select id="selectByNodeIdUser" resultType="int">
        select markid from mark_node where userid=#{userid} and nodeid=#{nodeid}
    </select>
	<select id="searchMarkNode" resultType="com.dimension.pojo.BaseNode" >
		SELECT base_node.*,mark_node.isEdited,table_type.chinesename as "table.chinesename",`user`.username
		FROM base_node
		LEFT JOIN mark_node on base_node.nodeId=mark_node.nodeId
		LEFT JOIN table_type on table_type.id=base_node.tableid
		LEFT JOIN `user` ON
		`user`.Id=base_node.userId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="userId != null">
				mark_node.userId=#{userId}
			</if>
			<if test="baseNodeConditon.nodename != null">
				and base_node.nodename like CONCAT('%',#{baseNodeConditon.nodename},'%')
			</if>
			<if test="baseNodeConditon.beginTime != null ">
				and base_node.collecttime <![CDATA[ >= ]]>
				#{baseNodeConditon.beginTime}
			</if>
			<if test="baseNodeConditon.endTime != null">
				and base_node.collecttime <![CDATA[ <= ]]>
				#{baseNodeConditon.endTime}
			</if>
			<if test="baseNodeConditon.address != null">
				and base_node.address like CONCAT('%',#{baseNodeConditon.address},'%')
			</if>
		</trim>
		<if test="start != null and count != null ">
			limit #{start},#{count}
		</if>
	</select>
	<select id="count" resultType="int" >
		SELECT count(*)
		FROM base_node LEFT JOIN mark_node on base_node.nodeId=mark_node.nodeId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="userId != null">
				mark_node.userId=#{userId}
			</if>
			<if test="baseNodeConditon.nodename != null">
				and base_node.nodename like CONCAT('%',#{baseNodeConditon.nodename},'%')
			</if>
			<if test="baseNodeConditon.beginTime != null ">
				and base_node.collecttime <![CDATA[ >= ]]>
				#{baseNodeConditon.beginTime}
			</if>
			<if test="baseNodeConditon.endTime != null">
				and base_node.collecttime <![CDATA[ <= ]]>
				#{baseNodeConditon.endTime}
			</if>
			<if test="baseNodeConditon.address != null">
				and base_node.address like CONCAT('%',#{baseNodeConditon.address},'%')
			</if>
		</trim>

	</select>
	<select id="isExist" resultType="int" >
		SELECT count(*) from mark_node
		where
				nodeId=#{nodeId} and userId=${userId}

	</select>
	<select id="getMarkByUser" resultType="int">
select mark_node.nodeId from mark_node WHERE mark_node.userId=#{userid}

	</select>
</mapper>